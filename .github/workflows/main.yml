name: 'build-and-upload'

on: 
  workflow_dispatch
  
jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above)
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install frontend dependencies
        run: bun install

      - name: Build all packages
        run: bun run build:packages

      - name: Build server
        if: matrix.platform != 'macos-latest'
        run: |
          cd apps/server
          bun run build
          bun run deploy:server

      - name: Build server (macos)
        if: matrix.platform == 'macos-latest'
        run: |
          cd apps/server
          bun run build
          bun run deploy:server:macos

      - name: Build web app
        run: |
          cd apps/web
          bun run build

      - name: Build Tauri App
        working-directory: ./apps/web
        run: |
          # Temporarily disable updater and signing
          sed -i.bak 's/"active": true/"active": false/' src-tauri/tauri.conf.json || true
          # For macOS, use different sed syntax
          if [ "${{ matrix.platform }}" = "macos-latest" ]; then
            sed -i '' 's/"active": true/"active": false/' src-tauri/tauri.conf.json || true
          fi
          bun run tauri build ${{ matrix.args }}

      # Upload artifacts for each platform
      - name: Upload Server Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: server-${{ matrix.platform }}
          path: |
            apps/server/dist/**/*
            apps/server/build/**/*
          if-no-files-found: warn

      - name: Upload Web Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-${{ matrix.platform }}
          path: apps/web/dist/**/*
          if-no-files-found: warn

      - name: Upload Tauri Artifacts (Windows)
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: tauri-windows
          path: |
            apps/web/src-tauri/target/release/*.exe
            apps/web/src-tauri/target/release/bundle/msi/*
          if-no-files-found: warn

      - name: Upload Tauri Artifacts (macOS)
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: tauri-macos-${{ contains(matrix.args, 'aarch64') && 'arm64' || 'x64' }}
          path: |
            apps/web/src-tauri/target/release/bundle/dmg/*
            apps/web/src-tauri/target/release/bundle/macos/*
          if-no-files-found: warn

      - name: Upload Tauri Artifacts (Linux)
        if: matrix.platform == 'ubuntu-22.04'
        uses: actions/upload-artifact@v4
        with:
          name: tauri-linux
          path: |
            apps/web/src-tauri/target/release/bundle/deb/*
            apps/web/src-tauri/target/release/bundle/appimage/*
            apps/web/src-tauri/target/release/audioling
          if-no-files-found: warn
